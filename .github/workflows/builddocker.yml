name: Docker Image CI

on:
  push:
    branches: 
      - master
    paths:
      - 'docker/base/**'

env:
  PACKAGE_REGISTRY: docker.pkg.github.com/nvick/actions-testing
jobs:
  build-base:
    runs-on: ubuntu-latest
    steps:
    - name: Git Checkout
      uses: actions/checkout@v2

    - name: Log into registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
    
    - name: Build & Push Base Image
      id: build-base
      run: |
        IMAGE_ID=$PACKAGE_REGISTRY/ruby-base
        echo IMAGE_ID=$IMAGE_ID

        docker pull $IMAGE_ID:latest || true

        docker build . --file docker/base/Dockerfile --cache-from $IMAGE_ID:latest --tag $IMAGE_ID:$GITHUB_SHA --tag $IMAGE_ID:latest
        docker push $IMAGE_ID:$GITHUB_SHA
        echo "::set-output name=image::$IMAGE_ID"

    - name: Push Latest Base Image
      run: |
        docker push ${{ steps.build-base.outputs.image }}:latest
        
    - name: Build & Push Dev Image
      id: build-dev
      run: |
        IMAGE_ID=$PACKAGE_REGISTRY/ruby-dev
        echo IMAGE_ID=$IMAGE_ID

        docker pull $IMAGE_ID:latest || true

        docker build . --file docker/base/dev-base/Dockerfile --cache-from $IMAGE_ID:latest --build-arg IMAGE_TAG=$GITHUB_SHA --tag $IMAGE_ID:$GITHUB_SHA --tag $IMAGE_ID:latest
        docker push $IMAGE_ID:$GITHUB_SHA
        echo "::set-output name=image::$IMAGE_ID"

    - name: Push Latest Dev Image
      run: |
        docker push ${{ steps.build-dev.outputs.image }}:latest
        
  build-rails-prod:
    runs-on: ubuntu-latest
    needs: build-base
    steps:
    - name: Git Checkout
      uses: actions/checkout@v2

    - name: Log into registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

    - name: Build Production Image
      run: docker build . --file docker/production/Dockerfile
